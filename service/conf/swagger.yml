swagger: "2.0"
info:
  description: "Shopifine Service represents final exam project on the bachelor studies on subject Knowledge Based Systems."
  version: "1.1.0"
  title: "Shopifine"
  contact:
    email: "dmarjanovic94@gmail.com"
consumes:
  - application/json
produces:
  - application/json
definitions:
  ProductRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/ProductRequestData'
    required:
      - data
  ProductRequestData:
    type: object
    properties:
      type:
        type: string
        enum:
          - products
        description: Type of requested Product
      attributes:
        $ref: '#/definitions/ProductRequestAttributes'
      relationships:
        $ref: '#/definitions/ProductRequestRelationships'
    required:
      - type
      - attributes
      - relationships
  ProductRequestAttributes:
    type: object
    properties:
      name:
        type: string
        description: Name of the product
        example: MacBook Pro 15-inch
      imageUrl:
        type: string
        description: URL to preview product image
        example: https://store.storeimages.cdn-apple.com/4974/as-images.apple.com/is/image/AppleInc/aos/published/images/T/N7/TN740/TN740
      price:
        type: double
        description: Product price
        example: 1999.99
      quantity:
        type: integer
        description: Number of Producst in stock
        example: 21
      fillStock:
        type: boolean
        description: Indicate if Product available on stock
      status:
        type: string
        description: Current status of Product
        enum:
          - ACTIVE
          - ARCHIVED
      minQuantity:
        type: integer
        description: Minimum quantity on stock
        example: 4
    required:
      - name
      - imageUrl
      - price
      - quantity
      - minQuantity
  ProductRequestRelationships:
    type: object
    properties:
      category:
        description: Relationship to Product Category
        $ref: '#/definitions/RequestRelationship'
    required:
      - category
  ProductCollectionResponse:
    type: object
    properties:
      data:
        type: array
        minItems: 0
        uniqueItems: true
        items:
          $ref: '#/definitions/ProductResponseData'
      links:
        $ref: '#/definitions/CollectionLinks'
    required:
      - data
      - links
  ProductResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/ProductResponseData'
    required:
      - data
  ProductResponseData:
    type: object
    properties:
      type:
        type: string
        enum:
          - products
        description: Type of retrieved Products
      id:
        type: integer
        description: Unique identifier of Product
        example: 1
      attributes:
        $ref: '#/definitions/ProductResponseAttributes'
      relationships:
        $ref: '#/definitions/ProductResponseRelationships'
    required:
      - type
      - id
      - attributes
      - relationships
  ProductResponseAttributes:
    type: object
    properties:
      name:
        type: string
        description: Name of the product
        example: MacBook Pro 15-inch
      imageUrl:
        type: string
        description: URL to preview product image
        example: https://store.storeimages.cdn-apple.com/4974/as-images.apple.com/is/image/AppleInc/aos/published/images/T/N7/TN740/TN740
      price:
        type: double
        description: Product price
        example: 1999.99
      quantity:
        type: integer
        description: Number of Producst in stock
        example: 21
      createdAt:
        type: string
        description: Time when Product is stored
        example: '2017-08-06T01:56:10.000+02:00'
      lastBoughtAt:
        type: string
        description: Time when Product is last time bought
        example: '2017-10-21T01:56:10.000+02:00'
      fillStock:
        type: boolean
        description: Indicate if Product available on stock
      status:
        type: string
        description: Current status of Product
        enum:
          - ACTIVE
          - ARCHIVED
      minQuantity:
        type: integer
        description: Minimum quantity on stock
        example: 4
    required:
      - name
      - price
      - imageUrl
      - quantity
      - createdAt
      - lastBoughtAt
      - fillStock
      - status
      - minQuantity
  ProductResponseRelationships:
    type: object
    properties:
      category:
        description: Relationship to Product Category
        $ref: '#/definitions/ResponseRelationship'
      discounts:
        description: Relationship to list of discounts by product category
        $ref: '#/definitions/ResponseRelationshipCollection'
    required:
      - category
  UserRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/UserRequestData'
    required:
      - data
  UserRequestData:
    type: object
    properties:
      type:
        type: string
        enum:
          - users
        description: Type of requsted User
      attributes:
        $ref: '#/definitions/UserRequestAttributes'
      relationships:
        $ref: '#/definitions/UserRequestRelationships'
    required:
      - type
      - attributes
      - relationships
  UserRequestAttributes:
    type: object
    properties:
      username:
        type: string
        description: User username
        example: dmarjanovic
      password:
        type: string
        description: User password
        example: realmadrid
      firstName:
        type: string
        description: User first name
        example: Dragutin
      lastName:
        type: string
        description: User last name
        example: Marjanovic
      role:
        type: string
        description: Possible roles of user
        enum:
          - CUSTOMER
          - SALES_MANAGER
          - SALESMAN
      address:
        type: string
        description: Address of the resident
        example: Pozorisni Trg 6, Novi Sad
    required:
      - username
      - password
      - firstName
      - lastName
      - role
  UserRequestRelationships:
    type: object
    properties:
      buyerCategory:
        description: Relationship to Buyer category
        $ref: '#/definitions/RequestRelationship'
    required:
      - buyerCategory
  UserResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/UserResponseData'
    required:
      - data
  UserResponseData:
    type: object
    properties:
      type:
        type: string
        enum:
          - users
        description: Type of retrieved User
        id:
          type: integer
          description: Unique identifier of User
          example: 1
      attributes:
        $ref: '#/definitions/UserResponseAttributes'
      relationships:
        $ref: '#/definitions/UserResponseRelationships'
      meta:
        $ref: '#/definitions/UserResponseMeta'
    required:
      - type
      - id
      - attributes
      - meta
  UserResponseAttributes:
    type: object
    properties:
      username:
        type: string
        description: User username
        example: dmarjanovic
      firstName:
        type: string
        description: User first name
        example: Dragutin
      lastName:
        type: string
        description: User last name
        example: Marjanovic
      role:
        type: string
        description: Possible roles of user
        enum:
          - CUSTOMER
          - SALES_MANAGER
          - SALESMAN
      address:
        type: string
        description: Address of the resident
        example: Pozorisni Trg 6, Novi Sad
      longitude:
        type: double
        description: Location longitude
        example: 45.26
      latitude:
        type: double
        description: Location latitude
        example: 19.83
    required:
      - username
      - firstName
      - lastName
      - role
  UserResponseRelationships:
    type: object
    properties:
      buyerCategory:
        description: Relationship to Buyer category
        $ref: '#/definitions/ResponseRelationship'
    required:
      - buyerCategory
  UserResponseMeta:
    type: object
    properties:
      registeredAt:
        type: string
        description: Time when User is stored
        example: '2017-08-06T01:56:10.000+02:00'
  UpdateUserRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/UpdateUserRequestData'
    required:
      - data
  UpdateUserRequestData:
    type: object
    properties:
      type:
        type: string
        enum:
          - users
        description: Type of requsted User
      attributes:
        $ref: '#/definitions/UpdateUserRequestAttributes'
    required:
      - type
      - attributes
  UpdateUserRequestAttributes:
    type: object
    properties:
      firstName:
        type: string
        description: User first name
        example: Dragutin
      lastName:
        type: string
        description: User last name
        example: Marjanovic
      address:
        type: string
        description: Address of the resident
        example: Pozorisni Trg 6, Novi Sad
      longitude:
        type: double
        description: Location longitude
        example: 45.26
      latitude:
        type: double
        description: Location latitude
        example: 19.83
    required:
      - firstName
      - lastName
      - address
      - longitude
      - latitude
  GoogleAuthRequest:
    type: object
    properties:
      idToken:
        type: string
        description: Google token obtained from personal address
    required:
      - idToken
  GoogleAuthResponse:
    type: object
    properties:
      aud:
        type: string
      sub:
        type: string
      email:
        type: string
        description: User's Google email
      email_verified:
        type: string
        description: Whether is email verified or not
      picture:
        type: string
        description: Picture used on Google's account
      given_name:
        type: string
        description: Given name of the user
      family_name:
        type: string
        description: Family name of the user
    required:
      - aud
      - sub
      - email
      - email_verified
      - picture
      - given_name
      - family_name
  BuyerCategoryRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/BuyerCategoryRequestData'
    required:
      - data
  BuyerCategoryRequestData:
    type: object
    properties:
      type:
        type: string
        enum:
          - buyer-categories
        description: Type of requested Buyer Categories
      attributes:
        $ref: '#/definitions/BuyerCategoryRequestAttributes'
    required:
      - type
      - attributes
  BuyerCategoryRequestAttributes:
    type: object
    properties:
      name:
        type: string
        description: Name of Buyer Category
        example: Gold buyer
    required:
      - name
  BuyerCategoryResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/BuyerCategoryResponseData'
    required:
      - data
  BuyerCategoryCollectionResponse:
    type: object
    properties:
      data:
        type: array
        minItems: 0
        uniqueItems: true
        items:
          $ref: '#/definitions/BuyerCategoryResponseData'
      links:
        $ref: '#/definitions/CollectionLinks'
    required:
      - data
      - links
  BuyerCategoryResponseData:
    type: object
    properties:
      type:
        type: string
        enum:
          - buyer-categories
        description: Type of retrieved Buyer Categories
      id:
        type: integer
        description: Unique identifier of Buyer Category
        example: 1
      attributes:
        $ref: '#/definitions/BuyerCategoryResponseAttributes'
      relationships:
        $ref: '#/definitions/BuyerCategoryResponseRelationships'
    required:
      - type
      - id
      - attributes
      - relationships
  BuyerCategoryResponseAttributes:
    type: object
    properties:
      name:
        type: string
        description: Name of Buyer Category
        example: Gold buyer
    required:
      - name
  BuyerCategoryResponseRelationships:
    type: object
    properties:
      thresholds:
        description: Relationship to buyer categories thresholds
        $ref: '#/definitions/ResponseRelationshipCollection'
    required:
      - thresholds
  ThresholdRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/ThresholdRequestData'
    required:
      - data
  ThresholdRequestData:
    type: object
    properties:
      type:
        type: string
        enum:
          - consumption-thresholds
        description: Type of requested Consumption Thresholds
      attributes:
        $ref: '#/definitions/ThresholdAttributes'
      relationships:
        $ref: '#/definitions/ThresholdRequestRelationships'
    required:
      - type
      - attributes
      - relationships
  ThresholdRequestRelationships:
    type: object
    properties:
      category:
        description: Relationship to buyer category we need to add threshold for
        $ref: '#/definitions/RequestRelationship'
    required:
      - category
  ThresholdResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/ThresholdResponseData'
    required:
      - data
  ThresholdCollectionResponse:
    type: object
    properties:
      data:
        type: array
        minItems: 0
        uniqueItems: true
        items:
          $ref: '#/definitions/ThresholdResponseData'
      links:
        $ref: '#/definitions/CollectionLinks'
    required:
      - data
      - links
  ThresholdResponseData:
    type: object
    properties:
      type:
        type: string
        enum:
          - consumption-thresholds
        description: Type of retrieved Consumption Threshold
        id:
          type: integer
          description: Unique identifier of Consumption Threshold
          example: 1
      attributes:
        $ref: '#/definitions/ThresholdAttributes'
      relationships:
        $ref: '#/definitions/ThresholdResponseRelationships'
    required:
      - type
      - id
      - attributes
      - relationships
  ThresholdResponseRelationships:
    type: object
    properties:
      category:
        description: Relationship to threshold's buyer category
        $ref: '#/definitions/ResponseRelationship'
    required:
      - category
  ThresholdAttributes:
    type: object
    properties:
      from:
        type: integer
        description: Minimum points for threshold
        example: 4
      to:
        type: integer
        description: Maximum points for threshold
        example: 21
      award:
        type: double
        description: Level of discount
        example: 6.8
  BillRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/BillRequestData'
    required:
      - data
  BillRequestData:
    type: object
    properties:
      type:
        type: string
        enum:
          - bills
        description: Type of requested Bill
      attributes:
        $ref: '#/definitions/BillRequestAttributes'
      relationships:
        $ref: '#/definitions/BillRequestRelationships'
    required:
      - type
      - attributes
      - relationships
  BillRequestAttributes:
    type: object
    properties:
      state:
        type: string
        description: Bill state
        enum:
          - ORDERED
          - CANCELLED
          - SUCCESSFUL
      totalItems:
        type: long
        format: int64
        description: Number of items in Bill
        example: 21
      pointsSpent:
        type: long
        format: int64
        description: Number of applied points
        example: 10
    required:
      - state
      - totalItems
      - pointsSpent
  BillRequestRelationships:
    type: object
    properties:
      customer:
        description: Relationship to Bill customer
        $ref: '#/definitions/RequestRelationship'
    required:
      - customer
  BillResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/BillResponseData'
    required:
      - data
  BillCollectionResponse:
    type: object
    properties:
      data:
        type: array
        minItems: 0
        uniqueItems: true
        items:
          $ref: '#/definitions/BillResponseData'
      links:
        $ref: '#/definitions/CollectionLinks'
    required:
      - data
      - links
  BillResponseData:
    type: object
    properties:
      type:
        type: string
        enum:
          - bills
        description: Type of retrieved Bills
      id:
        type: integer
        description: Unique identifier of Bill
        example: 1
      attributes:
        $ref: '#/definitions/BillResponseAttributes'
      relationships:
        $ref: '#/definitions/BillResponseRelationships'
    required:
      - type
      - id
      - attributes
      - relationships
  BillResponseAttributes:
    type: object
    properties:
      createdAt:
        type: string
        description: Date when Bill is stored
        example: '2017-08-06T01:56:10.000+02:00'
      state:
        type: string
        description: Bill state
        enum:
          - ORDERED
          - CANCELLED
          - SUCCESSFUL
      totalItems:
        type: long
        format: int64
        description: Number of items in Bill
        example: 21
      amount:
        type: double
        description: Bill amount
        example: 1389.21
      discount:
        type: double
        description: Value of discount for whole bill
        example: 10
      discountAmount:
        type: string
        description: Amount of bill discount
        example: 138.921
      pointsGained:
        type: long
        format: int64
        description: Total gained points in shopping
        example: 21
      pointsSpent:
        type: long
        format: int64
        description: Total spent points in shopping
        example: 10
      address:
        type: string
        description: Address of the current order location
        example: Pozorišni trg 6
      longitude:
        type: double
        description: Location longitude
        example: 45.26
      latitude:
        type: double
        description: Location latitude
        example: 19.83
    required:
      - createdAt
      - state
      - totalItems
      - amount
      - discount
      - discountAmount
      - pointsGained
      - pointsSpent
  BillResponseRelationships:
    type: object
    properties:
      customer:
        description: Relationship to Bill Customer
        $ref: '#/definitions/ResponseRelationship'
      items:
        description: Relationship to bill items
        $ref: '#/definitions/ResponseRelationshipCollection'
      discounts:
        description: Relationship to bill discounts
        $ref: '#/definitions/ResponseRelationshipCollection'
    required:
      - customer
      - items
      - discounts
  BillDiscountCollectionResponse:
    type: object
    properties:
      data:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/BillDiscountData'
      links:
        $ref: '#/definitions/CollectionLinks'
    required:
      - data
      - links
  BillDiscountData:
    type: object
    properties:
      attributes:
        $ref: '#/definitions/BillDiscountAttributes'
      relationships:
        $ref: '#/definitions/BillDiscountRelationships'
    required:
      - attributes
      - relationships
  BillDiscountAttributes:
    type: object
    properties:
      name:
        type: string
        description: Desctiption of gained discount
        example: Based on user category.
      discount:
        type: double
        description: Value of bill discount
        example: 6.8
      type:
        type: string
        description: Type of discount
        enum:
          - BASIC
          - PRO
    required:
      - name
      - discount
      - type
  BillDiscountRelationships:
    type: object
    properties:
      bill:
        $ref: '#/definitions/ResponseRelationship'
    required:
      - bill
  BillItemRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/BillItemRequestData'
    required:
      - data
  BillItemRequestData:
    type: object
    properties:
      type:
        type: string
        enum:
          - bill-items
        description: Type of requested Bill Items
      attributes:
        $ref: '#/definitions/BillItemRequestAttributes'
      relationships:
        $ref: '#/definitions/BillItemRequestRelationships'
    required:
      - type
      - attributes
      - relationships
  BillItemRequestAttributes:
    type: object
    properties:
      price:
        type: double
        description: Bill item price
        example: 1999.99
      quantity:
        type: integer
        description: Number of ordered items
        example: 4
      discount:
        type: double
        description: Single discount for Bill item
        example: 6.8
      ordinal:
        type: integer
        description: Bill Item Ordinal
        example: 1
    required:
      - price
      - quantity
      - discount
  BillItemRequestRelationships:
    type: object
    properties:
      product:
        description: Relationship to Product
        $ref: '#/definitions/RequestRelationship'
      bill:
        description: Relationship to Bill
        $ref: '#/definitions/RequestRelationship'
    required:
      - product
      - bill
  BillItemResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/BillItemResponseData'
    required:
      - data
  BillItemCollectionResponse:
    type: object
    properties:
      data:
        type: array
        minItems: 0
        uniqueItems: true
        items:
          $ref: '#/definitions/BillItemResponseData'
      links:
        $ref: '#/definitions/CollectionLinks'
    required:
      - data
      - links
  BillItemResponseData:
    type: object
    properties:
      type:
        type: string
        enum:
          - bill-items
        description: Type of retrieved Bill Items
      id:
        type: integer
        description: Unique identifier of Bill Items
        example: 1
      attributes:
        $ref: '#/definitions/BillItemResponseAttributes'
      relationships:
        $ref: '#/definitions/BillItemResponseRelationships'
    required:
      - type
      - id
      - attributes
      - relationships
  BillItemResponseAttributes:
    type: object
    properties:
      ordinal:
        type: integer
        description: Ordinal number in Bill
        example: 1
      price:
        type: double
        description: Bill item price
        example: 1999.99
      quantity:
        type: integer
        description: Number of ordered items
        example: 4
      amount:
        type: double
        description: Total price of Bill item
        example: 7999.96
      discount:
        type: double
        description: Single discount for Bill item
        example: 6.8
      discountAmount:
        type: double
        description: Total discount amount for Bill item
        example: 543.99728
    required:
      - ordinal
      - price
      - quantity
      - amount
      - discount
      - discountAmount
  BillItemResponseRelationships:
    type: object
    properties:
      product:
        description: Relationship to Product
        $ref: '#/definitions/ResponseRelationship'
      bill:
        description: Relationship to Bill
        $ref: '#/definitions/ResponseCollection'
      discounts:
        description: Relationship to bill item discounts
        $ref: '#/definitions/ResponseRelationshipCollection'
    required:
      - product
      - bill
  BillItemDiscountCollectionResponse:
    type: object
    properties:
      data:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/BillItemDiscountData'
      links:
        $ref: '#/definitions/CollectionLinks'
    required:
      - data
      - links
  BillItemDiscountData:
    type: object
    properties:
      attributes:
        $ref: '#/definitions/BillItemDiscountAttributes'
      relationships:
        $ref: '#/definitions/BillItemDiscountRelationships'
    required:
      - attributes
      - relationships
  BillItemDiscountAttributes:
    type: object
    properties:
      name:
        type: string
        description: Desctiption of gained discount
        example: Based on quantity.
      discount:
        type: double
        description: Value of bill item discount
        example: 6.8
      type:
        type: string
        description: Type of discount
        enum:
          - BASIC
          - PRO
    required:
      - name
      - discount
      - type
  BillItemDiscountRelationships:
    type: object
    properties:
      billItem:
        $ref: '#/definitions/ResponseRelationship'
    required:
      - billItem
  ProductCategoryRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/ProductCategoryRequestData'
    required:
      - data
  ProductCategoryRequestData:
    type: object
    properties:
      type:
        type: string
        enum:
          - product-categories
        description: Type of requested Product Category
      attributes:
        $ref: '#/definitions/ProductCategoryRequestAttributes'
      relationships:
        $ref: '#/definitions/ProductCategoryRequestRelationships'
    required:
      - type
      - attributes
  ProductCategoryRequestAttributes:
    type: object
    properties:
      name:
        type: string
        description: General product category
        example: Electronics
      maxDiscount:
        type: double
        description: Maximum allowed discount for product in specified category
        example: 20
      isConsumerGoods:
        type: boolean
        description: Represents flag if product category is consumer goods
        default: false
    required:
      - name
      - maxDiscount
  ProductCategoryRequestRelationships:
    type: object
    properties:
      superCategory:
        description: Relationship to super category
        $ref: '#/definitions/RequestRelationship'
    required:
      - superCategory
  ProductCategoryResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/ProductCategoryResponseData'
    required:
      - data
  ProductCategoryCollectionResponse:
    type: object
    properties:
      data:
        type: array
        minItems: 0
        uniqueItems: true
        items:
          $ref: '#/definitions/ProductCategoryResponseData'
      links:
        $ref: '#/definitions/CollectionLinks'
    required:
      - data
      - links
  ProductCategoryResponseData:
    type: object
    properties:
      type:
        type: string
        enum:
          - product-categories
        description: Type of retrieved Product Categories
      id:
        type: integer
        description: Unique identifier of Product category
        example: 1
      attributes:
        $ref: '#/definitions/ProductCategoryResponseAttributes'
      relationships:
        $ref: '#/definitions/ProductCategoryResponseRelationships'
    required:
      - type
      - id
      - attributes
      - relationships
  ProductCategoryResponseAttributes:
    type: object
    properties:
      name:
        type: string
        description: General product category
        example: Electronics
      maxDiscount:
        type: double
        description: Maximum allowed discount for product in specified category
        example: 20
      isConsumerGoods:
        type: boolean
        description: Represents flag if product category is consumer goods
    required:
      - name
      - maxDiscount
      - isConsumerGoods
  ProductCategoryResponseRelationships:
    type: object
    properties:
      superCategory:
        description: Relationship to super category
        $ref: '#/definitions/ResponseRelationship'
      subcategories:
        description: Relationship to list of subcategories
        $ref: '#/definitions/ResponseRelationshipCollection'
    required:
      - subcategories
  WishlistItemRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/WishlistItemRequestData'
    required:
      - data
  WishlistItemResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/WishlistItemResponseData'
    required:
      - data
  WishlistItemRequestData:
    type: object
    properties:
      type:
        type: string
        enum:
          - wishlist-items
        description: Type of requested Wihslist Item
      attributes:
        $ref: '#/definitions/WishlistItemRequestAttributes'
      relationships:
        $ref: '#/definitions/WishlistItemRequestRelationships'
    required:
      - type
      - attributes
      - relationships
  WishlistItemResponseData:
    type: object
    properties:
      type:
        type: string
        enum:
          - wishlist-items
        description: Type of requested Wihslist Item
      id:
        type: integer
        description: Unique identifier of Wishlist Item
        example: 1
      attributes:
        $ref: '#/definitions/WishlistItemResponseAttributes'
      relationships:
        $ref: '#/definitions/WishlistItemResponseRelationships'
    required:
      - id
      - type
      - attributes
      - relationships
  WishlistItemRequestAttributes:
    type: object
  WishlistItemResponseAttributes:
    type: object
    properties:
      createdAt:
        type: string
    required:
      - createdAt
  WishlistItemRequestRelationships:
    type: object
    properties:
      customer:
        $ref: '#/definitions/RequestRelationship'
      product:
        $ref: '#/definitions/RequestRelationship'
    required:
      - customer
      - product
  WishlistItemResponseRelationships:
    type: object
    properties:
      customer:
        $ref: '#/definitions/ResponseRelationship'
      product:
        $ref: '#/definitions/ResponseRelationship'
    required:
      - customer
      - product
  WishlistItemCollectionResponse:
    type: object
    properties:
      data:
        type: array
        minItems: 0
        uniqueItems: true
        items:
          $ref: '#/definitions/WishlistItemResponseData'
      links:
        $ref: '#/definitions/CollectionLinks'
    required:
      - data
      - links
  GoogleAuthRequest:
    type: object
    properties:
      idToken:
        type: string
    required:
      - idToken
  GoogleAuthResponse:
    type: object
    properties:
      aud:
        type: string
      sub:
        type: string
      email:
        type: string
      email_verified:
        type: string
      exp:
        type: string
      picture:
        type: string
      given_name:
        type: string
      family_name:
        type: string
    required:
      - aud
      - sub
      - email
      - email_verified
      - exp
      - picture
      - given_name
      - family_name
  ActionDiscountRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/ActionDiscountRequestData'
    required:
      - data
  ActionDiscountRequestData:
    type: object
    properties:
      type:
        type: string
        enum:
          - action-discounts
        description: Type of requested Action Discount
      attributes:
        $ref: '#/definitions/ActionDiscountAttributes'
    required:
      - type
      - attributes
  ActionDiscountResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/ActionDiscountResponseData'
    required:
      - data
  ActionDiscountCollectionResponse:
    type: object
    properties:
      data:
        type: array
        minItems: 0
        uniqueItems: true
        items:
          $ref: '#/definitions/ActionDiscountResponseData'
      links:
        $ref: '#/definitions/CollectionLinks'
    required:
      - data
      - links
  ActionDiscountResponseData:
    type: object
    properties:
      type:
        type: string
        enum:
          - action-discounts
        description: Type of retrieved Action Discount
      id:
        type: integer
        description: Unique identifier of Action Discount
        example: 1
      attributes:
        $ref: '#/definitions/ActionDiscountAttributes'
      relationships:
        $ref: '#/definitions/ActionDiscountRelationships'
    required:
      - type
      - id
      - attributes
      - relationships
  ActionDiscountAttributes:
    type: object
    properties:
      name:
        type: string
        description: Name of action discount
        example: Black Friday
      from:
        type: string
        description: Date when discount begins
        example: '2017-07-20T01:56:10.000+02:00'
      to:
        type: string
        description: Date when discount ends
        example: '2017-08-06T01:56:10.000+02:00'
      discount:
        type: double
        description: Action discount
        example: 50
    required:
      - name
      - from
      - to
      - discount
  ActionDiscountRelationships:
    type: object
    properties:
      categories:
        description: Relationship to list of Product categories
        $ref: '#/definitions/ResponseRelationshipCollection'
    required:
      - categories
  ErrorResponse:
    type: object
    properties:
      meta:
        $ref: '#/definitions/Meta'
      errors:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/Error'
    required:
      - meta
      - errors
  Meta:
    type: object
    properties:
      createdAt:
        type: string
    required:
      - createdAt
  Error:
    type: object
    properties:
      status:
        type: string
      detail:
        type: string
    required:
      - status
      - detail
  RequestRelationship:
    type: object
    properties:
      data:
        $ref: '#/definitions/RelationshipData'
    required:
      - data
  ResponseRelationship:
    type: object
    properties:
      links:
        $ref: '#/definitions/RelationshipLinks'
      data:
        $ref: '#/definitions/RelationshipData'
    required:
      - links
      - data
  ResponseRelationshipCollection:
    type: object
    properties:
      links:
        $ref: '#/definitions/RelationshipLinks'
    required:
      - links
  RelationshipLinks:
    type: object
    properties:
      related:
        type: string
    required:
      - related
  RelationshipData:
    type: object
    properties:
      type:
        type: string
      id:
        type: integer
        example: 1
    required:
      - type
      - id
  CollectionLinks:
    type: object
    properties:
      prev:
        type: string
      self:
        type: string
      next:
        type: string
    required:
      - self
  UserAuthRequest:
    type: object
    properties:
      username:
        type: string
        description: Username used for auth
        example: dmarjanovic
      password:
        type: string
        description: Password used for auth
        example: sergioramos
    required:
      - username
      - password
  UserAuthResponse:
    type: object
    properties:
      token:
        type: string
        description: JSON Web Token used for further stateless auth
        example: 'header.payload.signature'
    required:
      - token
